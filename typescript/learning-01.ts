/** 자바스크립트에서 타입 스크립트로
 *
 * 1. 바닐라 자바스크립트의 함정
 * 바닐라 자바스크립트란, 중요한 언어 확장이나 프레임워크 없이 자바스크립트를 사용하는 것을 바닐라('Vanilla')라고 부릅니다.
 * 한 마디로 순수한 자바스크립트를 의미합니다.
 *
 * 1.1 값 비싼 자유
 * 자바스크립트를 사용하는 개발자들의 가장 큰 불만은 불행히도 핵심 기능에 있답니다.
 * 자바스크립트는 사실상 코드를 구성하는 방법에 제한이 없습니다.
 *
 * 1.2 부족한 문서
 * 자바스크립트 언어 사양에는 함수의 매개변수, 함수 반환, 변수 또는 다른 구성 요소의 의미를 설명하는 표준화된 내용이 없었답니다.
 * 그래서 많은 개발자가 블록 주석으로 함수와 변수를 설명하는 JSDoc 표준을 채택하곤 했는데요.
 *
 * @param {Painting} painter
 * @param {string} Painting
 * @returns {boolean} Whether the painter painted the painting.
 *
 * 이러한 JSDoc에는 다음과 같은 주요 문제로 인해 규모가 있는 코드베이스에서 사용하기가 불편합니다.
 * JSDoc 설명이 코드가 잘못되는 것을 막을 수 없습니다.
 * JSDoc 설명이 이전에는 정확했더라도 코드 리팩터링 중에 생긴 변경 사항과 관련된 현재 유효하지 않은 JSDoc 주석을 모두 찾기란 어렵습니다.
 * 복잡한 객체를 설명할 때는 다루기 어렵고 장황해서 타입과 그 관계를 정의하려면 다수의 독립형 주석이 필요합니다.
 *
 * 위와 같은 문제를 해결하기 위해 타입 스크립트가 탄생했습니다.
 *
 *  */

/** 타입 스크립트
 * 타입 스크립트는 종종 '자바스크립트의 상위 집합' 혹은 '타입이 있는 자바스크립트'라고 설명되곤 합니다.
 * 타입 스크립트란 무엇일까요?
 *
 * 1. 프로그래밍 언어: 자바스크립트의 모든 구문과 타입을 정의하고 사용하기 위한 새로운 타입 스크립트 고유 구문이 포함된 언어
 * 2. 타입 검사기: 자바스크립트 및 타입 스크립트로 작성된 일련의 파일에서 생성된 모든 구성 요소(변수, 함수 등)를 이해하고, 잘못 구성된 부분을 알려주는 프로그램
 * 3. 컴파일러: 타입 검사기를 실행하고 문제를 보고한 후 이에 대응되는 자바스크립트 코드를 생성하는 프로그램
 * 4. 언어 서비스: 타입 검사기를 사용해 비주얼 스튜디오 코드(VS Code)와 같은 편집기에 개발자에게 유용한 유틸리티 제공법을 알려주는 프로그램
 *
 * 1.3 제한을 통한 자유
 * 타입 스크립트를 사용하면 매개변수와 변수에 제공되는 값의 타입을 지정할 수 있습니다.
 * 코드를 지정한 방법으로만 사용하도록 제한한다면, 타입 스크립트는 코드의 한 영역을 변경하더라도 이 코드를 사용하는 다른 코드의 영역이 멈추지 않는다는 확신을 줄 수 있습니다.
 *
 * 1.4 로컬에서 시작하기
 * Node.js가 설치되어 있다면, npm install -g typescript 명령어를 통해 글로벌 설치
 * tsc --version 명령어를 통해 버전확인 (2024. 10. 31 기준 Version 5.6.3)
 */
